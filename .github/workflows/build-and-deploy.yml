name: Build & Deploy Infrastructure and Apps

on:
  push:
    branches: [main]

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
  TF_VAR_stripe_api_key: ${{ secrets.TF_VAR_stripe_api_key }}
  TF_VAR_stripe_webhook_secret: ${{ secrets.TF_VAR_stripe_webhook_secret }}
  TF_VAR_sendgrid_api_key: ${{ secrets.TF_VAR_sendgrid_api_key }}
  TF_VAR_printful_api_key: ${{ secrets.TF_VAR_printful_api_key }}
  TF_VAR_gcs_bucket_name: ${{ secrets.GCS_BUCKET_NAME }}
  TF_VAR_database_url: ${{ secrets.DATABASE_URL }}
  TF_VAR_credentials_json: ${{ secrets.GCP_SA_KEY }}
  TF_VAR_image_tag: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      # don't kill the others if one fails
      fail-fast: false
      # run all three jobs in parallel
      matrix:
        include:
          - service: fastapi-app
            context: backend/fastapi_app
            dockerfile: backend/fastapi_app/Dockerfile
          - service: flask-app
            context: backend/flask_app
            dockerfile: backend/flask_app/Dockerfile
          - service: worker
            context: worker
            dockerfile: worker/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build & Push ${{ matrix.service }}
        run: |
          docker build \
            -f worker/Dockerfile \
            -t us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ matrix.service }}:${{ env.TF_VAR_image_tag }} \
            ${{ matrix.context }}
          docker push \
            us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ matrix.service }}:${{ env.TF_VAR_image_tag }}

  terraform:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP (for Terraform)
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.3.9"

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -reconfigure -input=false

      - name: Check Terraform caller identity
        working-directory: terraform
        run: |
          terraform apply \
            -target=data.google_client_config.me \
            -auto-approve

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
